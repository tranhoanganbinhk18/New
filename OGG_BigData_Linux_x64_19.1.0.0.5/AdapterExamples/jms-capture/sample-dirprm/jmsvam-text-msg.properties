########################################################################
# JMS capture properties: receive JMS messages, create GoldenGate trails
#
## connection factory name
# gg.jms.connectionFactory=...
## queue/topic name
# gg.jms.destination=...
## destination (queue/topic) username/password
# gg.jms.user=...
# gg.jms.password=...
## standard JNDI properties
# java.naming.provider.url=...
# java.naming.factory.initial=...
## put java.naming.security.* properties in dirprm/jndi.properties
# java.naming.security.principal=goldengate
# java.naming.security.credentials=goldengate
########################################################################

##### Example JMS settings (e.g., for ActiveMQ)
gg.jms.connectionFactory=ConnectionFactory
gg.jms.destination=dynamicQueues/testQ

java.naming.provider.url=tcp://localhost:61616?jms.prefetchPolicy.all=1000
java.naming.factory.initial=org.apache.activemq.jndi.ActiveMQInitialContextFactory

## data source
gg.source=jms

# set localtx=false to disable JMS transactions, and use client_acknowledge
gg.jms.localtx=false
gg.jms.id=time

# reporting frequency to log file
gg.report.time=1 hr

##### Configuration for native JNI library
# Set JVM options, e.g: -Xmx512m -Djava.class.path=...
# Set logging options (put configuration files in dirprm):
#  -Dlog4j.configuration={your log4j.properties}
#  -Dlogback.configurationFile={your logback.xml}
jvm.bootoptions=-Djava.class.path=dirprm:ggjava/ggjava.jar:/opt/activemq/activemq-all.jar

# native JNI library log configuration (output directory, filename prefix)
goldengate.log.logname=dirrpt/jmsvam_jni
goldengate.log.level=INFO
goldengate.log.tostdout=false
goldengate.log.tofile=true
goldengate.log.modules=COPYBOOK,DEFSCHEMA,DELIMITEDPARSER,FILEPROVIDER,FIXEDPARSER,JAVAVAM,JAVAVAMIMPL,JMSPROVIDER,LOGMALLOC,PARSER,PROVIDER,RECMGR,SFXML,TXSTORE,UEUTIL,UTILS,XMLPARSER,XMLRULES

########################################################################
# XML parsing properties: use the following properties to parse the GG JMS
#  delivery built-in "minxml" message format (a very condensed XML format.)
#  The provided sample trail (tc00000, tc.def) can be used with GG JMS delivery
# to send messages that can be parsed by this JMS consumer configuration.
########################################################################

# delimited parser properties (sample message => msgDelim.txt)
#    parser.type=delimited
# fixed parser properties, format defined using copybook (sample message => msgFixed.txt)
#    parser.type=fixed

parser.type=delimited

delim.schematype=sourcedefs
delim.sourcedefs=dirdef/tc.def

delim.header=schemaandtable,timestamp,optype
delim.optype=optype
delim.seqid=*seqid
delim.schemaandtable=schemaandtable
delim.timestamp=timestamp
delim.txid=*txid

delim.hasbefores=false
delim.hasnames=false
delim.afterfirst=false
delim.isgrouped=false

delim.fielddelim=,
delim.fielddelim.escaped=\,
delim.linedelim=\X0a
delim.linedelim.escaped=||
delim.quote="
delim.quote.escaped=\"
delim.nullindicator=NULL
delim.nullindicator.escaped=\NULL

## sample "fixed" parser properties (set parser.type=fixed), see sample message, msgFixed.txt
fixed.copybook=dirdef/copybook.cpy
fixed.header=HEADER
fixed.table=TABLE-NAME
fixed.schema="GGS"
fixed.timestamp=TIMESTAMP
fixed.seqid=*seqid
fixed.txid=*txid
fixed.optype=OP-CODE

